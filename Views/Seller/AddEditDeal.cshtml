@model Entity.Deal
@{
    int id = (int)ViewData["dealID"];
    int sellerId = (int)ViewData["sellerID"];
    string FolderID = (string)ViewData["FolderID"];
    var sellerMealItems = (List<Entity.Meal>)ViewData["sellerMealItems"];
}
@using (Html.BeginForm("AddEditDeal", "Seller", FormMethod.Post, new { enctype = "multipart/form-data", @id = "DealItem-form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(c => c.profileID)
    @Html.HiddenFor(c => c.dealID)
    @Html.HiddenFor(c => c.FolderID, FolderID)
    <div class="container">
        <h2 style="color:black; font-size:1.2rem;font-weight: bold;">Create/Edit a New Deal</h2>
            <div class="formSel sellform">
                Create deal here provide data and Information<br>
                <label for="">Select items to be added in the deal. <span class="mand-red">*</span> </label>
                    <div class="row ">
                        <div class="col-md-12">
                            <div id="news-slider2" class="owl-carousel">
                                @*@foreach (var item in sellerMealItems)
                                {
                                    <div class="post-slide2">
                                        <div class="mycard">

                                            <div class="post-img">

                                                <a href="#">
                                                    <img src="~/Uploads/Product/@FolderID/thumb-60/@item.gallery.filename"  alt="">

                                                    <input class="mealItem" type="checkbox" name="checkbox[]" value="deal3" id="checkbox1" />

                                                    <label for="checkbox1"></label>

                                                    <div class="post-date">
                                                        <span class="date">@item.CookingTime</span>
                                                         <span class="month">jan</span> 
                                                    </div>
                                                </a>
                                            </div>
                                            <div class="post-content">

                                                <div class="mycard-body">
                                                    <div class="row d-flex justify-content-center">
                                                        <div class="col-md-8">
                                                            <h5 class="mycard-title">@item.displayTitle<br><span class="ct-text-black">by<span class="ct-text-red"> @item.displayTitle</span></span></h5>
                                                        </div>
                                                        <div class="col-md-4">
                                                            <p class="card-text">RS.<span class="s-card-text"> @item.price</span></p>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="card-body-2">
                                                    <div class="row">
                                                        <div class="col-md-12">
                                                            <div class="starrating risingstar d-flex justify-content-left">
                                                                <input type="radio" id="star5" name="rating" value="5" /><label for="star5" title="5 star"></label>
                                                                <input type="radio" id="star4" name="rating" value="4" /><label for="star4" title="4 star"></label>
                                                                <input type="radio" id="star3" name="rating" value="3" /><label for="star3" title="3 star"></label>
                                                                <input type="radio" id="star2" name="rating" value="2" /><label for="star2" title="2 star"></label>
                                                                <input type="radio" id="star1" name="rating" value="1" /><label for="star1" title="1 star"></label>
                                                                <p class="rating-text">&nbsp; &nbsp; 4.5 - 86 Ratings</p>
                                                            </div>
                                                        </div>

                                                    </div>

                                                </div>
                                                <div class="card-body-3">
                                                    <div class="row d-flex justify-content-center ">
                                                        <div class="col">
                                                            <p class="pd-top icon-txt"> <span class="mic-2">2</span>@item.serving</p>
                                                        </div>
                                                        <div class="col">
                                                            <img src="~/Content/New/images/micro.png" class="card-img-top img-style" alt="..."> <p class="icon-txt">@item.Weight</p>
                                                        </div>
                                                        <div class="col">
                                                            <img src="~/Content/New/images/micro-2.png" class="card-img-top img-style" alt="..."> <p class="icon-txt">@item.IngredientOne</p>
                                                        </div>
                                                    </div>

                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                }*@
                            </div>
                        </div>
                    </div>
                    <div class="row ">
                        <div class="col-sm-12 pd-mr-0">
                            <label for="">Upload Deal Image</label>
                            <div id="dealfiles" class="fallback dropzone">
                            </div>
                        </div>

                        <div class="col-sm-6 pd-mr-0">
                            <label for="email">Name of Deal <span class="mand-red">*</span></label>
                            @Html.TextBoxFor(c => c.title, new { @class = "form-control", @placeholder = "Name of Deal", @required = "required" })
                        </div>
                        <div class="col-sm-6 pd-mr-0">
                            <label for="email">Set Price (Show Total Items Price here) <span class="mand-red">*</span></label>
                            @Html.TextBoxFor(c => c.Price, new { @class = "form-control", @placeholder = "PKR 258", @required = "required", @type = "number" })
                        </div>
                        <div class="col-sm-12 pd-mr-0 ">
                            <label for="comment">Details of Deal</label>
                            @Html.TextAreaFor(c => c.description, new { @placeholder = "Describe your Deal", @class = "form-control", @rows = "5" })
                        </div>
                        <div class="col-sm-6 pd-mr-0">
                            <label for="email">Weight of Items to be Calculated From Items</label>
                            @Html.TextBoxFor(c => c.Weight, new { @class = "form-control", @placeholder = "e.g 500grams" })
                        </div>
                        <div class="col-sm-6 pd-mr-0">
                            <label for="email">Serving to be Calculated From Items</label>
                            @Html.TextBoxFor(c => c.serving, new { @class = "form-control", @placeholder = "e.g 2 persons" })
                        </div>
                        <div class="col-sm-12 pd-mr-0">
                            <label for="email">Expiry Date <span class="mand-red">*</span></label>
                            @Html.TextBoxFor(c => c.ExpiryDate, new { @class = "form-control", @placeholder = "12/7/2020" })
                        </div>
                        <div class="col-sm-12 pd-mr-0">
                            <label for="">Type of Food <span class="mand-red">*</span></label>
                            <select class="custom-select" id="FoodTypeID" name="FoodTypeID" required>
                                @if (ViewBag.ListMealType != null)
                                {
                                    for (int i = 0; i < ViewBag.ListMealType.Count; i++)
                                    {
                                        string val = ViewBag.ListMealType[i].mealTypeID.ToString();
                                        string title = ViewBag.ListMealType[i].name.ToString();

                                        <text>
                                            <option value="@val">@title</option>  </text>
                                    }

                                }
                            </select>
                        </div>
                        <div class="col-sm-12 pd-mr-0">
                            <label for="">Ingredients to be Calculated From Items </label>
                        </div>
                        <div class="col-sm-6 pd-mr-0">
                            @Html.TextBoxFor(c => c.IngredientOne, new { @class = "form-control", @placeholder = "Ingredient One" })
                        </div>
                        <div class="col-sm-6 pd-mr-0">
                            @Html.TextBoxFor(c => c.IngredientTwo, new { @class = "form-control", @placeholder = "Ingredient Two" })
                        </div>

                        <div class=" newingredient col-sm-6 ">
                            @Html.TextBoxFor(c => c.IngredientThree, new { @class = "form-control", @placeholder = "Ingredient Three" })
                        </div>
                        <div class=" newingredient col-sm-6 ">
                            @Html.TextBoxFor(c => c.IngredientFour, new { @class = "form-control", @placeholder = "Ingredient Four" })
                        </div>

                        <div class="col-sm-6 pd-mr-0">
                            <label for="email">Cooking Time to Prepare</label>
                            @Html.TextBoxFor(c => c.CookingTime, new { @class = "form-control", @placeholder = "Cooking Time" })
                        </div>
                        <div class="col-sm-6 pd-mr-0">
                            <label for="email">Delivery Time <span class="mand-red">*</span></label>
                            @Html.TextBoxFor(c => c.DeliveryTime, new { @class = "form-control", @placeholder = "e.g 25 mins", @required = "required" })
                        </div>
                        <div class="col-sm-12 pd-mr-0">
                            <label for="">Select Days of Week When you Would Deliver <span class="mand-red">*</span></label>
                        </div>
                        <div class="col-sm-12 weekDays-selector">
                            <input name="monday" type="checkbox" value="Box 1" id="monday" class="weekday" />
                            <label for="monday">MON</label>
                            <input name="tuesday" type="checkbox" value="Box 2" id="tuesday" class="weekday" />
                            <label for="tuesday">TUE</label>
                            <input name="wednesday" type="checkbox" value="Box 3" id="wednesday" class="weekday" />
                            <label for="wednesday">WED</label>
                            <input name="thursday" type="checkbox" value="Box 4" id="thursday" class="weekday" />
                            <label for="thursday">THU</label>
                            <input name="friday" type="checkbox" value="Box 5" id="friday" class="weekday" />
                            <label for="friday">FRI</label>
                            <input name="saturday" type="checkbox" value="Box 6" id="saturday" class="weekday" />
                            <label for="saturday">SAT</label>
                            <input name="sunday" type="checkbox" value="Box 7" id="sunday" class="weekday" />
                            <label for="sunday">SUN</label>
                        </div>


                        <div class="col-sm-6 pd-mr-0">
                            <label for="email"> Time:From <span class="mand-red">*</span></label>
                            <div class="input-group time" id="timepicker">
                                @Html.TextBoxFor(c => c.TimeFrom, new { @class = "input-group-append input-group-addon form-control", @placeholder = "Minute &nbsp;&nbsp;&nbsp;&nbsp;| &nbsp;&nbsp;&nbsp;&nbsp; Hour", @required = "required" })
                            </div>

                        </div>
                        <div class="col-sm-6 pd-mr-0">
                            <label for="email">Time:To <span class="mand-red">*</span></label>
                            <div class="input-group time" id="timepicker-2">
                                @Html.TextBoxFor(c => c.TimeTo, new { @class = "input-group-append input-group-addon form-control", @placeholder = "Minute &nbsp;&nbsp;&nbsp;&nbsp;| &nbsp;&nbsp;&nbsp;&nbsp; Hour", @required = "required" })
                            </div>
                            <i class="fas fa-plus-circle d-flex justify-content-end add-slot" style="margin-top: 0.75rem; color:#6FA843;"><span style="color:darkgray;">Add more time slots</span></i>
                        </div>

                        <button type="submit" value="Test Required" id="checkBtn" class="btn btn-primary additem " style="width:100%; margin-top: 1rem;">ADD Deal</button>
                    </div>
            </div>
    </div>
}
    <script>

    $(document).ready(function () {
          Dropzone.autoDiscover = false;
        var myDropzone = new Dropzone("div#dealfiles", {
            url: "/Seller/UploadDealGallery", addRemoveLinks: true,
            autoProcessQueue: false,
            maxFilesize: 50,
            maxFiles: 10,
            uploadMultiple: true,
            parallelUploads: 10,
            init: function () {
                
                var myDropzone = this;
                $.getJSON("/Seller/GetDealGallery/?id=@Model.dealID").done(function (data) {
                    
                     if (data!='') {
                         
                      $.each(data, function (index, item) {
                          
                              //// Create the mock file:
                              var mockFile = {
                                  name: item.title,
                                  id : item.galleryID,
                                  size: 12345
                              };

                          // Call the default addedfile event handler
                          myDropzone.emit("addedfile", mockFile);
                              // And optionally show the thumbnail of the file:
                          myDropzone.emit("thumbnail", mockFile, "/Uploads/Product/@FolderID/thumb-200/" + item.filename);
                           myDropzone.emit("complete", mockFile);
                           var removeButton = Dropzone.createElement("<button class=\"btn btnremove\" style=\"width: 100%;\">Remove file</button>");

                        removeButton.addEventListener("click", function(e)
                        {
                            
                                e.preventDefault();
                            e.stopPropagation();
                            blockUI();
                              $.ajax({
                                  type: "POST",
                                  url: '/Seller/RemoveDealFileFromServer',
                                  async: true,
                                  data: { id: mockFile.id },
                                  success: function (data, textStatus, xhr) {
                                      unblockUI();
                                       myDropzone.removeFile(mockFile);
                                  },
                                  error: function (jqXHR, textStatus, errorThrown) {
                                      handleErrors(textStatus);
                                  }
                              });
                               
                            });

                        mockFile.previewElement.appendChild(removeButton);

                              // If you use the maxFiles option, make sure you adjust it to the
                              // correct amount:
                              //var existingFileCount = 1; // The number of files already uploaded
                              //myDropzone.options.maxFiles = myDropzone.options.maxFiles - existingFileCount;
                      });
                  }
              });
                var self = this;
                this.on('addedfile', function (file) {
                    var removeButton = Dropzone.createElement("<button class=\"btn btnremove\" style=\"width: 100%;\">Remove file</button>");

                    removeButton.addEventListener("click", function (e) {
                        myDropzone.removeFile(file);
                        file.previewElement.appendChild(removeButton);
                    });
                });

                this.on("error", function (file, message) {

                    unblockUI();
                    //this.removeFile(file);
                    return toastr.warning('wrong');
                });

                this.on('sending', function (file, xhr, formData) {
                    
                    formData.append('DealID', $('#dealID').val());
                    formData.append('FolderID', '@FolderID');
                    formData.append('SellerID', '@Model.profileID');
                    unblockUI();
                });

                this.on("successmultiple", function (files, response) {
                    unblockUI();
                    //unblockUI();
                    if (response == "SE") {
                       return toastr.error('Storage Limit');
                    }
                    toastr.success("Updated Successfully.");
                  //  myDropzone.removeAllFiles();
                    // getClientDocs();
                });
                this.on("errormultiple", function (files, response) {
                    unblockUI();
                    toastr.error("failed");
                });

            }

        });

          $('form').removeData('validator');
            $('form').removeData('unobtrusiveValidation');
            $.validator.unobtrusive.parse('form');
            var options = {
                beforeSubmit: function (msg) {
                    blockUI();
                },
                success: function (msg) {
                    
                     unblockUI();
                    if (msg > 0) {

                        if (myDropzone.getQueuedFiles().length === 0) {
                        unblockUI();
                        return showWarningToast('Drop Some Files');
                        }
                         $('#dealID').val(msg)
                    if (myDropzone.getQueuedFiles().length > 10) {
                        unblockUI();
                       return showWarningToast('No more files');
                    }
                    blockUI();
                    showWarningToast('Please Wait untill Upload.');
                    blockUI();
                        myDropzone.processQueue();
                }
                else {
                        return toastr.error("Something wrong with Data.");
                }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    
                    toastr.error("failed");
                    unblockUI();
                    $(".btn").prop("disabled", false);

                }
            };
            $('#DealItem-form').ajaxForm(options);

        //$("div#mealfiles").dropzone({
        //     url: "/Seller/UploadGallery",
        //    addRemoveLinks: true,
        //    maxFiles: 5,
        //    //parameter name value
        //    paramName: "files",
        //    //clickable div id
        //    clickable: '#mealfiles',
        //    //preview files container Id
        //    previewsContainer: "#previewFiles",
        //    autoProcessQueue: false,
        //    uploadMultiple: true,
        //    parallelUploads: 100,
        //    maxFiles: 100,
        //    //  url:"/", // url here to save file
        //    maxFilesize: 1000,//max file size in MB,
        //    addRemoveLinks: true,
        //    dictResponseError: 'Server not Configured',
        //    acceptedFiles: ".png,.jpg,.gif,.bmp,.jpeg,.pdf",// use this to restrict file type
        //    init: function () {
        //        
        //        var self = this;
        //        // config
        //        self.options.addRemoveLinks = true;
        //        self.options.dictRemoveFile = "Delete";
        //        //New file added
        //        self.on("addedfile", function (file) {
        //            console.log('new file added ', file);
        //            $('.dz-success-mark').hide();
        //            $('.dz-error-mark').hide();
        //        });
        //        // Send file starts
        //        self.on("sending", function (file) {
        //            console.log('upload started', file);
        //            $('.meter').show();
        //        });

        //        // File upload Progress
        //        self.on("totaluploadprogress", function (progress) {
        //            console.log("progress ", progress);
        //            $('.roller').width(progress + '%');
        //        });

        //        self.on("queuecomplete", function (progress) {
        //            $('.meter').delay(999).slideUp(999);
        //        });

        //        // On removing file
        //        self.on("removedfile", function (file) {
        //            console.log(file);
        //        });

        //        $('#Submit').on("click", function (e) {
        //            e.preventDefault();
        //            e.stopPropagation();
        //            // Validate form here if needed

        //            if (self.getQueuedFiles().length > 0) {
        //                self.processQueue();


        //            } else {
        //                self.uploadFiles([]);
        //                $('#myDropzone').submit();
        //            }

        //        });



        //        self.on("successmultiple", function (files, response) {
        //            // Gets triggered when the files have successfully been sent.
        //            // Redirect user or notify of success.

        //        });
        //    }
        //});


    })

    </script>
