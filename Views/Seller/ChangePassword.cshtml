@model TashtyWebProject.ViewModel.Login.ChangePassword

<div class="containter-fluid maindashboard-pr-settings">

    @using (Html.BeginForm("ChangePassword", "Seller", FormMethod.Post, new { enctype = "multipart/form-data", @id = "changePassword-form" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        @Html.HiddenFor(c => c.ProfileID)
        @Html.HiddenFor(c => c.UserName)

        <div class="container">
            <div class="row">
                <div class="col-sm-12">
                    <h2 class="pr-info-head">Change Password</h2>
                </div>
            </div>
            <div class="row">

                <div class="col-12">
                    <div class="formSel">
                        <div class="row sellform">
                            &nbsp;&nbsp; Change your accounts pasword.

                            @if (!string.IsNullOrEmpty(Model.User.password))
                            {
                                <div class="col-sm-12 pd-mr-0">
                                    <label for="sas">Enter Old Password <span class="str-r">*</span></label>
                                </div>
                                <div class="col-sm-6 pd-mr-0">
                                    @Html.TextBoxFor(c => c.OldPassword, new { @class = "form-control", @placeholder = "Old Password", @required = "required", @type = "password" })
                                    <h6 class="input_error_msg">@Html.ValidationMessageFor(c => c.OldPassword)</h6>
                                </div>
                                <div class="col-sm-6 pd-mr-0">
                                </div>
                            }
                            <div class="col-sm-12 pd-mr-0">
                                <label for="sas">New Password <span class="str-r">*</span></label>
                            </div>
                            <div class="col-sm-6 pd-mr-0">
                                @Html.TextBoxFor(c => c.Password, new { @class = "form-control", @placeholder = "New Password", @required = "required", @type = "password", @pattern = @"(?=^.{6,}$)(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\s).*$" })
                                <h6 class="input_error_msg">@Html.ValidationMessageFor(c => c.Password)</h6>
                            </div>
                            <div class="col-sm-6 pd-mr-0">
                            </div>
                            <div class="col-sm-12 pd-mr-0">
                                <label for="sas">Confirm New Password <span class="str-r">*</span></label>
                            </div>
                            <div class="col-sm-6 pd-mr-0">
                                @Html.TextBoxFor(c => c.ConfirmPassword, new { @class = "form-control", @placeholder = "Confirm Password", @required = "required", @type = "password" })
                                <h6 class="input_error_msg">@Html.ValidationMessageFor(c => c.ConfirmPassword)</h6>
                            </div>
                            <div class="col-sm-6 pd-mr-0">
                            </div>
                            <div class="col-sm-12">
                                <p class="p-t-10"> 8 characters or longer. Combine upper and lowercase letters and numbers.</p>
                            </div>
                            <div class="col-sm-12">
                                <button type="submit" value="Test Required" class="order-btn btn-btn-order">SUBMIT</button>
                            </div>

                        </div>
                    </div>

                </div>
            </div>
        </div>
    }
</div>
<script>
    $('form').removeData('validator');
    $('form').removeData('unobtrusiveValidation');
    $.validator.unobtrusive.parse('form');
    var options = {
        beforeSubmit: function (msg) {
            blockUI();
        },
        success: function (msg) {
            unblockUI();
            if (msg) {
                toastr.success("Updated Successfully");
            }
            else {

                return toastr.error("Something wrong with password.");
            }
        },
        error: function (jqXHR, textStatus, errorThrown) {
            toastr.error("failed");
            unblockUI();

        }
    };
    $('#changePassword-form').ajaxForm(options);

</script>
