@model Entity.Deal
@{
    int id = (int)ViewData["dealID"];
    int sellerId = (int)ViewData["sellerID"];
    string FolderID = (string)ViewData["FolderID"];
    var sellerMealItems = (List<Entity.Meal>)ViewData["sellerMealItems"];
    var count = 0;
    if (string.IsNullOrEmpty(Model.TimeFromString))
    {
        Model.TimeFromString = "12 PM";
    }
    if (string.IsNullOrEmpty(Model.TimeToString))
    {
        Model.TimeToString = "10 PM";
    }
    string check = "";
    if (Model.dealID == null || Model.dealID == 0)
    {
        check = "checked";
    }
}
<link href="~/Content/New/css/glider.css" rel="stylesheet" />
<style>
    .badge {
        color: darkgray;
    }
    .glider-contain {
        width: 90%;
        max-width: 997px;
        margin: 0 auto;
    }

    .glider-slide {
        min-height: 150px;
    }

        .glider-slide img {
            width: 100%;
        }
</style>

<div class="containter-fluid maindashboard-pr-settings">

    @using (Html.BeginForm("CreateFoodDeal", "Seller", FormMethod.Post, new { enctype = "multipart/form-data", @id = "DealItem-form" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        @Html.HiddenFor(c => c.profileID)
        @Html.HiddenFor(c => c.dealID)
        @Html.HiddenFor(c => c.FolderID, FolderID)
        @Html.HiddenFor(c => c.ExpiryDate)
    <div class="container">
        <input type="hidden" id="MealItemIds" name="MealItemIds" value="@Model.MealItemIds" />
        @if (Model.dealID > 0)
        {
            <h2 style="color:black; font-size:1.2rem;font-weight: bold;">Edit Deal</h2>
        }
        else
        {
            <h2 style="color:black; font-size:1.2rem;font-weight: bold;">Create a New Deal</h2>
        }
            <div class="formSel sellform">
                Create deal here provide data and Information<br>
                <label for="">Select items to be added in the deal. <span class="mand-red">*</span> </label>
                <div class="row ">
                    <div class="col-md-12">
                        <div class="glider-contain">
                            <div id="glider" class="glider">

                                @foreach (var item in sellerMealItems)
                                {
                                    bool ischecked = false;
                                    if (Model.dealItemList != null)
                                    {
                                        foreach (var dealItem in Model.dealItemList)
                                        {
                                            if (item.mealID == dealItem.mealID)
                                            {
                                                ischecked = true;
                                            }
                                        }
                                    }
                                    count = count + 1;
                                    <div class="post-slide2">
                                        <div class="mycard">

                                            <div class="post-img card-img-top">

                                                <a href="#">
                                                    <img src="~/Uploads/Product/@FolderID/thumb-60/@item.gallery.filename" alt="No file">
                                                    @if (ischecked)
                                                    {
                                                        <input class="mealItem checkboxmealitems" type="checkbox" value="@item.mealID" id="checkbox-@item.mealID" onclick="PopulateIds(this, '@item.mealID')" checked="checked" />

                                                    }
                                                    else
                                                    {
                                                        <input class="mealItem checkboxmealitems" type="checkbox" value="@item.mealID" id="checkbox-@item.mealID" onclick="PopulateIds(this, '@item.mealID')" />
                                                    }

                                                    <label for="checkbox-@item.mealID"></label>

                                                    <div class="post-date">
                                                        <span class="date">@item.CookingTime mins</span>
                                                        @*<span class="month">@DateTime.Now.Month</span>*@
                                                    </div>
                                                </a>
                                            </div>
                                            <div class="post-content">

                                                <div class="mycard-body">
                                                    <div class="row d-flex justify-content-center">
                                                        <div class="col-md-8">
                                                            <h5 class="mycard-title">@item.title</h5>
                                                        </div>
                                                        <div class="col-md-4">
                                                            <p class="card-text">RS.<span class="s-card-text"> @item.price</span></p>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="card-body-2">
                                                    <div class="row">
                                                        @*<div class="col-md-12">
                                                                <div class="starrating risingstar d-flex justify-content-left">
                                                                    <p class="rating-text">&nbsp; &nbsp; 4.5 - 86 Ratings</p>
                                                                </div>
                                                            </div>*@

                                                    </div>

                                                </div>
                                                <div class="card-body-3">
                                                    <div class="row d-flex justify-content-center ">
                                                        <div class="col">
                                                            <!--<p class="pd-top icon-txt"> <span class="mic-2">@item.serving</span>Serves @item.serving</p>-->
                                                            <img src="~/Content/images/Tashty- serving.png" class="card-img-top img-style" alt="..."> <p class="icon-txt">Serves @item.serving</p>
                                                        </div>
                                                        <div class="col">
                                                            <img src="~/Content/images/Tashty-deliverytime.png" class="card-img-top img-style" alt="..."> <p class="icon-txt">< 1 Hour</p>
                                                        </div>
                                                        <div class="col">
                                                            <img src="~/Content/images/tashty- category.png" class="card-img-top img-style" alt="..."> <p class="icon-txt">@item.DisplayCategory</p>
                                                        </div>
                                                    </div>
                                                    <div class="extra-space">

                                                    </div>
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                }

                            </div>

                            <button aria-label="Previous" class="glider-prev">«</button>
                            <button aria-label="Next" class="glider-next">»</button>
                            <div role="tablist" class="dots"></div>
                        </div>
                        @*<div id="news-slider2" class="owl-carousel">
                            @foreach (var item in sellerMealItems)
                            {
                                bool ischecked = false;
                                if (Model.dealItemList != null)
                                {
                                    foreach (var dealItem in Model.dealItemList)
                                    {
                                        if (item.mealID == dealItem.mealID)
                                        {
                                            ischecked = true;
                                        }
                                    }
                                }
                                count = count + 1;
                                <div class="post-slide2">
                                    <div class="mycard">

                                        <div class="post-img card-img-top">

                                            <a href="#">
                                                <img src="~/Uploads/Product/@FolderID/thumb-60/@item.gallery.filename" alt="No file">
                                                @if (ischecked)
                                                {
                                                    <input class="mealItem checkboxmealitems" type="checkbox" value="@item.mealID" id="checkbox-@item.mealID" onclick="PopulateIds(this, '@item.mealID')" checked="checked" />

                                                }
                                                else
                                                {
                                                    <input class="mealItem checkboxmealitems" type="checkbox" value="@item.mealID" id="checkbox-@item.mealID" onclick="PopulateIds(this, '@item.mealID')" />
                                                }

                                                <label for="checkbox-@item.mealID"></label>

                                                <div class="post-date">
                                                    <span class="date">@item.CookingTime mins</span>
                                                    <span class="month">@DateTime.Now.Month</span>
                                                </div>
                                            </a>
                                        </div>
                                        <div class="post-content">

                                            <div class="mycard-body">
                                                <div class="row d-flex justify-content-center">
                                                    <div class="col-md-8">
                                                        <h5 class="mycard-title">@item.title</h5>
                                                    </div>
                                                    <div class="col-md-4">
                                                        <p class="card-text">RS.<span class="s-card-text"> @item.price</span></p>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="card-body-2">
                                                <div class="row">
                                                    <div class="col-md-12">
                                                        <div class="starrating risingstar d-flex justify-content-left">
                                                            <p class="rating-text">&nbsp; &nbsp; 4.5 - 86 Ratings</p>
                                                        </div>
                                                    </div>

                                                </div>

                                            </div>
                                            <div class="card-body-3">
                                                <div class="row d-flex justify-content-center ">
                                                    <div class="col">
                                                        <p class="pd-top icon-txt"> <span class="mic-2">@item.serving</span>Serves @item.serving</p>
                                                        <img src="~/Content/images/Tashty- serving.png" class="card-img-top img-style" alt="..."> <p class="icon-txt">Serves @item.serving</p>
                                                    </div>
                                                    <div class="col">
                                                        <img src="~/Content/images/Tashty-deliverytime.png" class="card-img-top img-style" alt="..."> <p class="icon-txt">< 1 Hour</p>
                                                    </div>
                                                    <div class="col">
                                                        <img src="~/Content/images/tashty- category.png" class="card-img-top img-style" alt="..."> <p class="icon-txt">@item.DisplayCategory</p>
                                                    </div>
                                                </div>
                                                <div class="extra-space">

                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            }

                        </div>*@
                    </div>
                </div>

                <div class="row ">
                    <div class="col-sm-12 pd-mr-0">
                        <label for="">Upload Deal Image<span class="mand-red">*</span></label>
                        <div id="dealfiles" class="fallback dropzone">
                        </div>
                    </div>

                    <div class="col-sm-6 pd-mr-0">
                        <label for="email">Name of Deal <span class="mand-red">*</span></label>
                        @Html.TextBoxFor(c => c.title, new { @class = "form-control", @placeholder = "Name of Deal", @required = "required" })
                        <h6 class="input_error_msg">@Html.ValidationMessageFor(c => c.title)</h6>
                    </div>
                    <div class="col-sm-6 pd-mr-0">
                        <label for="email">Set Price (Show Total Items Price here) <span class="mand-red">*</span></label>
                        @Html.TextBoxFor(c => c.Price, new { @class = "form-control", @placeholder = "PKR 258", @required = "required", @type = "number" })
                        <h6 class="input_error_msg">@Html.ValidationMessageFor(c => c.Price)</h6>
                    </div>
                    <div class="col-sm-12 pd-mr-0">
                        <label for="email">Select Category <span class="mand-red">*</span></label>
                        <select name="category" id="category" class="form-control" multiple="multiple" style="display: none;" required>
                            @foreach (var item in Model.Categories)
                            {
                                <option value="@item.categoryID">@item.name</option>
                            }
                        </select>
                        <h6 class="input_error_msg">@Html.ValidationMessageFor(c => c.category)</h6>
                    </div>
                    <div class="col-sm-12 pd-mr-0">
                        <label for="">Type of Food <span class="mand-red">*</span></label>
                        <select class="custom-select" id="FoodTypeID" name="FoodTypeID" required>
                            @if (ViewBag.ListMealType != null)
                            {
                                for (int i = 0; i < ViewBag.ListMealType.Count; i++)
                                {
                                    string val = ViewBag.ListMealType[i].mealTypeID.ToString();
                                    string title = ViewBag.ListMealType[i].name.ToString();

                                    <text>
                                        <option value="@val">@title</option>  </text>
                                }

                            }
                        </select>
                    </div>

                    <div class="col-sm-12 pd-mr-0 ">
                        <label for="comment">Details of Deal</label>
                        @Html.TextAreaFor(c => c.description, new { @placeholder = "Describe your Deal", @class = "form-control", @rows = "5" })
                        <h6 class="input_error_msg">@Html.ValidationMessageFor(c => c.description)</h6>
                    </div>
                    <div class="col-sm-6 pd-mr-0">
                        <label for="email">Weight of Items</label>
                        @Html.TextBoxFor(c => c.Weight, new { @class = "form-control", @placeholder = "e.g 500grams", @type = "Number" })
                        <h6 class="input_error_msg">@Html.ValidationMessageFor(c => c.Weight)</h6>
                    </div>
                    <div class="col-sm-6 pd-mr-0">
                        <label for="email">Serving</label>
                        @Html.TextBoxFor(c => c.serving, new { @class = "form-control", @placeholder = "e.g 2 persons", @type = "Number" })
                        <h6 class="input_error_msg">@Html.ValidationMessageFor(c => c.serving)</h6>
                    </div>
                    @*<div class="col-sm-12 pd-mr-0">
            <label for="email">Expiry Date <span class="mand-red">*</span></label>
            @Html.TextBoxFor(c => c.ExpiryDate, new { @class = "form-control", @placeholder = "12/7/2020" })
        </div>*@
                    <div class="col-sm-12 pd-mr-0">
                        <label for="">Ingredients</label>
                    </div>
                    <div class="col-sm-6 pd-mr-0">
                        @Html.TextBoxFor(c => c.IngredientOne, new { @class = "form-control", @placeholder = "Ingredient One" })
                        <h6 class="input_error_msg">@Html.ValidationMessageFor(c => c.IngredientOne)</h6>
                    </div>
                    <div class="col-sm-6 pd-mr-0">
                        @Html.TextBoxFor(c => c.IngredientTwo, new { @class = "form-control", @placeholder = "Ingredient Two" })
                        <h6 class="input_error_msg">@Html.ValidationMessageFor(c => c.IngredientTwo)</h6>
                    </div>

                    <div class=" newingredient col-sm-6 ">
                        @Html.TextBoxFor(c => c.IngredientThree, new { @class = "form-control", @placeholder = "Ingredient Three" })
                        <h6 class="input_error_msg">@Html.ValidationMessageFor(c => c.IngredientThree)</h6>
                    </div>
                    <div class=" newingredient col-sm-6 ">
                        @Html.TextBoxFor(c => c.IngredientFour, new { @class = "form-control", @placeholder = "Ingredient Four" })
                        <h6 class="input_error_msg">@Html.ValidationMessageFor(c => c.IngredientFour)</h6>
                    </div>

                    <div class="col-sm-12 pd-mr-0">
                        <label for="email">Order Preparation Time (MINUTES)</label>
                        @Html.TextBoxFor(c => c.CookingTime, new { @class = "form-control", @placeholder = "Cooking Time", @type = "number" })
                        <h6 class="input_error_msg">@Html.ValidationMessageFor(c => c.CookingTime)</h6>
                    </div>
                    @*<div class="col-sm-6 pd-mr-0">
            <label for="email">Delivery Time <span class="mand-red">*</span></label>
            @Html.TextBoxFor(c => c.DeliveryTime, new { @class = "form-control", @placeholder = "e.g 25 mins", @required = "required", @type = "number" })
            <h6 class="input_error_msg">@Html.ValidationMessageFor(c => c.DeliveryTime)</h6>
        </div>*@
                    <div class="col-sm-12 pd-mr-0">
                        <label for="">Below are the active Days, Deal will be available. Choose as you like. <span class="mand-red">*</span></label>
                    </div>

                    <div class="col-sm-12 weekDays-selector">
                        <input name="monday1" type="checkbox" id="monday1" class="weekday" @check />
                        <label for="monday1">MON</label>
                        <input name="tuesday1" type="checkbox" id="tuesday1" class="weekday" @check />
                        <label for="tuesday1">TUE</label>
                        <input name="wednesday1" type="checkbox" id="wednesday1" class="weekday" @check />
                        <label for="wednesday1">WED</label>
                        <input name="thursday1" type="checkbox" id="thursday1" class="weekday" @check />
                        <label for="thursday1">THU</label>
                        <input name="friday1" type="checkbox" id="friday1" class="weekday" @check />
                        <label for="friday1">FRI</label>
                        <input name="saturday1" type="checkbox" id="saturday1" class="weekday" @check />
                        <label for="saturday1">SAT</label>
                        <input name="sunday1" type="checkbox" id="sunday1" class="weekday" @check />
                        <label for="sunday1">SUN</label>
                    </div>

                    <div class="col-sm-6 pd-mr-0">
                        <label for="email"> Order Start Time: <span class="mand-red">*</span></label>
                        <div class="input-group time" id="timepicker">
                            @Html.TextBoxFor(c => c.TimeFromString, new { @class = "input-group-append input-group-addon form-control", data_datepicker = "time", @placeholder = "Select time", @required = "required" })
                            <h6 class="input_error_msg">@Html.ValidationMessageFor(c => c.TimeFromString)</h6>
                        </div>

                    </div>
                    <div class="col-sm-6 pd-mr-0">
                        <label for="email">Order End Time: <span class="mand-red">*</span></label>
                        <div class="input-group time" id="timepicker-2">
                            @Html.TextBoxFor(c => c.TimeToString, new { @class = "input-group-append input-group-addon form-control", data_datepicker = "time", @placeholder = "Select time", @required = "required" })
                            <h6 class="input_error_msg">@Html.ValidationMessageFor(c => c.TimeToString)</h6>
                        </div>
                        @* <i class="fas fa-plus-circle d-flex justify-content-end add-slot" style="margin-top: 0.75rem; color:#6FA843;"><span style="color:darkgray;">Add more time slots</span></i>*@
                    </div>

                   
                    <div class="col-sm-6 pd-mr-0">
                        @Html.CheckBoxFor(x => x.isDealOftheDay, new { @class = "checkbox" })
                        <label for="isDealOftheDay">Is deal of the day</label>
                    </div>
                    @if (Model.dealID > 0)
                    {
                        <button type="submit" value="Test Required" id="checkBtn" class="btn btn-primary additem " style="width:100%; margin-top: 1rem;">SAVE</button>
                    }
                    else
                    {
                        <button type="submit" value="Test Required" id="checkBtn" class="btn btn-primary additem " style="width:100%; margin-top: 1rem;">CREATE DEAL</button>
                    }
                </div>
        </div>
    </div>
    }
</div>
<script>
    window._ = new Glider(document.querySelector('.glider'), {
        slidesToShow: 1, //'auto',
        slidesToScroll: 1,
        itemWidth: 150,
        draggable: true,
        scrollLock: false,
        dots: '#dots',
        rewind: true,
        arrows: {
            prev: '.glider-prev',
            next: '.glider-next'
        },
        responsive: [
            {
                breakpoint: 800,
                settings: {
                    slidesToScroll: 'auto',
                    itemWidth: 275,
                    slidesToShow: 'auto',
                    exactWidth: true
                }
            },
            {
                breakpoint: 700,
                settings: {
                    slidesToScroll: 4,
                    slidesToShow: 4,
                    dots: false,
                    arrows: false,
                }
            },
            {
                breakpoint: 600,
                settings: {
                    slidesToScroll: 3,
                    slidesToShow: 3
                }
            },
            {
                breakpoint: 500,
                settings: {
                    slidesToScroll: 2,
                    slidesToShow: 2,
                    dots: false,
                    arrows: false,
                    scrollLock: true
                }
            }
        ]
    });
    var glider = new Glider(document.getElementById('glider'));

    function sliderAuto(slider, miliseconds) {
        const slidesCount = slider.track.childElementCount;
        let slideTimeout = null;
        let nextIndex = 1;

        function slide() {
            slideTimeout = setTimeout(
                function () {
                    if (nextIndex >= slidesCount) {
                        nextIndex = 0;
                    }
                    slider.scrollItem(nextIndex++);
                },
                miliseconds
            );
        }

        slider.ele.addEventListener('glider-animated', function () {
            window.clearInterval(slideTimeout);
            slide();
        });

        slide();
    }

    sliderAuto(glider, 6000)

    $(document).ready(function () {
        if ($('.SearchQuery').val() != "" && $('.SearchQuery').val() != null && $('.SearchQuery').val() != undefined) {
            $('#showPopularFood').hide();
        }
    })
</script>
<script>

    $(document).ready(function () {
        $('#FoodTypeID').val("@Model.FoodTypeID");
  $(".owl-carousel").owlCarousel({
        items:3,
        itemsDesktop:[1199,2],
        itemsDesktopSmall:[980,2],
        itemsMobile:[600,1],
        pagination:false,
        navigationText:false,
        autoPlay:true
    });
});
     var preuploadedfiles = 0;
    $(document).ready(function () {

        if ('@Model.monday' == 'True') {
            $('#monday1').attr("checked", "checked");
        }
        if ('@Model.tuesday' == 'True') {
            $('#tuesday1').attr("checked", "checked");
        }
        if ('@Model.wednesday' == 'True') {
            $('#wednesday1').attr("checked", "checked");
        }
        if ('@Model.thursday' == 'True') {
            $('#thursday1').attr("checked", "checked");
        }
        if ('@Model.friday' == 'True') {
            $('#friday1').attr("checked", "checked");
        }
        if ('@Model.saturday' == 'True') {
            $('#saturday1').attr("checked", "checked");
        }
        if ('@Model.sunday' == 'True') {
            $('#sunday1').attr("checked", "checked");
        }
          Dropzone.autoDiscover = false;
        var myDropzone = new Dropzone("div#dealfiles", {
            url: "/Seller/UploadDealGallery",
            autoProcessQueue: false,
            maxFilesize: 50,
            maxFiles: 1,
            uploadMultiple: false,
            //parallelUploads: 10,
             acceptedFiles: ".png,.jpg,.jpeg",
            init: function () {
                var myDropzone = this;


                var myDropzone = this;
                $.getJSON("/Seller/GetDealGallery/?id=@Model.dealID").done(function (data) {

                     if (data!='') {

                      $.each(data, function (index, item) {

                              //// Create the mock file:
                              var mockFile = {
                                  name: item.title,
                                  id : item.galleryID,
                                  size: 12345
                              };

                          // Call the default addedfile event handler
                          myDropzone.emit("addedfile", mockFile);
                              // And optionally show the thumbnail of the file:
                          myDropzone.emit("thumbnail", mockFile, "/Uploads/Product/@FolderID/thumb-200/" + item.filename);
                          myDropzone.emit("complete", mockFile);
                           preuploadedfiles = preuploadedfiles + 1;
                           var removeButton = Dropzone.createElement("<button class=\"btn btnremove\" style=\"width: 100%;\">Remove file</button>");

                        removeButton.addEventListener("click", function(e)
                        {

                                e.preventDefault();
                            e.stopPropagation();
                            blockUI();
                              $.ajax({
                                  type: "POST",
                                  url: '/Seller/RemoveDealFileFromServer',
                                  async: true,
                                  data: { id: mockFile.id },
                                  success: function (data, textStatus, xhr) {
                                      unblockUI();
                                      myDropzone.removeFile(mockFile);
                                      preuploadedfiles = preuploadedfiles - 1;
                                  },
                                  error: function (jqXHR, textStatus, errorThrown) {
                                      handleErrors(textStatus);
                                  }
                              });

                            });

                        mockFile.previewElement.appendChild(removeButton);

                              // If you use the maxFiles option, make sure you adjust it to the
                              // correct amount:
                              //var existingFileCount = 1; // The number of files already uploaded
                              //myDropzone.options.maxFiles = myDropzone.options.maxFiles - existingFileCount;
                      });
                  }
              });
                var self = this;
                this.on('addedfile', function (file) {
                    var removeButton = Dropzone.createElement("<button class=\"btn btnremove\" style=\"width: 100%;\">Remove file</button>");

                    removeButton.addEventListener("click", function (e) {
                        myDropzone.removeFile(file);
                        file.previewElement.appendChild(removeButton);
                    });
                });

                this.on("error", function (file, message) {

                    unblockUI();
                   this.removeFile(file);
                });

                this.on('sending', function (file, xhr, formData) {

                    formData.append('DealID', $('#dealID').val());
                    formData.append('FolderID', '@FolderID');
                    formData.append('SellerID', '@Model.profileID');
                    unblockUI();
                });

                this.on("successmultiple", function (files, response) {
                    unblockUI();
                    //unblockUI();
                    if (response == "SE") {
                       return toastr.error('Storage limit');
                    }
                    toastr.success("Updated successfully.");
                    SellerMenu();
                  //  myDropzone.removeAllFiles();
                    // getClientDocs();
                });
                this.on("errormultiple", function (files, response) {

                    unblockUI();
            toastr.error(response);
                });
                this.on("success", function (files, response) {
                    unblockUI();
                    //unblockUI();
                    if (response == "SE") {
                       return toastr.error('Storage limit');
                    }
                    toastr.success("Updated successfully.");
                    SellerMenu();
                  //  myDropzone.removeAllFiles();
                    // getClientDocs();
                });

            }

        });

          $('form').removeData('validator');
            $('form').removeData('unobtrusiveValidation');
        $.validator.unobtrusive.parse('form');
         var Ischecked = false;
            var options = {
                beforeSubmit: function (msg) {
                     if ($('#category').val() == '') {
                        toastr.error("Please add at least one Category.");
                        return false;
                    }
                     msg.push({ name: 'monday', value: $('#monday1').is(":checked") });
                    msg.push({ name: 'tuesday', value: $('#tuesday1').is(":checked") });
                    msg.push({ name: 'wednesday', value: $('#wednesday1').is(":checked") });
                    msg.push({ name: 'thursday', value: $('#thursday1').is(":checked") });
                    msg.push({ name: 'friday', value: $('#friday1').is(":checked") });
                    msg.push({ name: 'saturday', value: $('#saturday1').is(":checked") });
                    msg.push({ name: 'sunday', value: $('#sunday1').is(":checked") });

                    if ((!myDropzone.files || !myDropzone.files.length) && preuploadedfiles <= 0) {
                        toastr.error("Please add at Image file for Deal Item.");
                        return false;
                    }
                    $('.weekday').each(function (index, obj) {
                     if (this.checked === true) {
                     Ischecked = true;
                      }
                     });
                    if (!Ischecked)
                    {
                        toastr.error("Please select days of week when you would deliver");
                        return false;
                    }
                      var start_time = $("#TimeFromString").val();

                    var end_time = $("#TimeToString").val();

                    //convert both time into timestamp
                    var stt = new Date("November 13, 2013 " + start_time);
                    stt = stt.getTime();

                    var endt = new Date("November 13, 2013 " + end_time);
                    endt = endt.getTime();

                    //by this you can see time stamp value in console via firebug
                    console.log("Time1: "+ stt + " Time2: " + endt);

                    if(stt > endt) {
                         toastr.error("Time From must be smaller then To Time.");
                            return false;
                    }
                     if($('#MealItemIds').val() == '' || $('#MealItemIds').val() == undefined) {
                         toastr.error("Please select atleast one food item.");
                            return false;
                    }
                    blockUI();
                },
                success: function (msg) {

                     unblockUI();
                    if (msg > 0) {
                        $('#dealID').val(msg);
                        myDropzone.processQueue();
                        if (preuploadedfiles >= 1) {
                             toastr.success("Updated successfully.");
                    SellerMenu();
                        }

                }
                else {
                        return toastr.error("Something wrong with data.");
                }
                },
                error: function (jqXHR, textStatus, errorThrown) {

                    toastr.error("failed");
                    unblockUI();
                    $(".btn").prop("disabled", false);

                }
            };
            $('#DealItem-form').ajaxForm(options);

        //$("div#mealfiles").dropzone({
        //     url: "/Seller/UploadGallery",
        //    addRemoveLinks: true,
        //    maxFiles: 5,
        //    //parameter name value
        //    paramName: "files",
        //    //clickable div id
        //    clickable: '#mealfiles',
        //    //preview files container Id
        //    previewsContainer: "#previewFiles",
        //    autoProcessQueue: false,
        //    uploadMultiple: true,
        //    parallelUploads: 100,
        //    maxFiles: 100,
        //    //  url:"/", // url here to save file
        //    maxFilesize: 1000,//max file size in MB,
        //    addRemoveLinks: true,
        //    dictResponseError: 'Server not Configured',
        //    acceptedFiles: ".png,.jpg,.gif,.bmp,.jpeg,.pdf",// use this to restrict file type
        //    init: function () {
        //
        //        var self = this;
        //        // config
        //        self.options.addRemoveLinks = true;
        //        self.options.dictRemoveFile = "Delete";
        //        //New file added
        //        self.on("addedfile", function (file) {
        //            console.log('new file added ', file);
        //            $('.dz-success-mark').hide();
        //            $('.dz-error-mark').hide();
        //        });
        //        // Send file starts
        //        self.on("sending", function (file) {
        //            console.log('upload started', file);
        //            $('.meter').show();
        //        });

        //        // File upload Progress
        //        self.on("totaluploadprogress", function (progress) {
        //            console.log("progress ", progress);
        //            $('.roller').width(progress + '%');
        //        });

        //        self.on("queuecomplete", function (progress) {
        //            $('.meter').delay(999).slideUp(999);
        //        });

        //        // On removing file
        //        self.on("removedfile", function (file) {
        //            console.log(file);
        //        });

        //        $('#Submit').on("click", function (e) {
        //            e.preventDefault();
        //            e.stopPropagation();
        //            // Validate form here if needed

        //            if (self.getQueuedFiles().length > 0) {
        //                self.processQueue();


        //            } else {
        //                self.uploadFiles([]);
        //                $('#myDropzone').submit();
        //            }

        //        });



        //        self.on("successmultiple", function (files, response) {
        //            // Gets triggered when the files have successfully been sent.
        //            // Redirect user or notify of success.

        //        });
        //    }
        //});

          if ('@Model.category' != null && '@Model.category' != '') {
            var data = '@Model.category';
            var dataarray = data.split(",");
            $("select[multiple='multiple']").val(dataarray);
            for (var i = 0; i < dataarray.length; i++) {
                $("select[multiple='multiple']").bsMultiSelect("widget").find(":checkbox[value='" + valArr[i] + "']").attr("checked", "checked");
                $("select[multiple='multiple'] option[value='" + valArr[i] + "']").attr("selected", 1);
                $("select[multiple='multiple']").bsMultiSelect("refresh");
            }
        }
        else {
            $("select[multiple='multiple']").bsMultiSelect();
        }
    })
</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/eonasdan-bootstrap-datetimepicker/4.17.47/js/bootstrap-datetimepicker.min.js"></script>
<script>
    $('input[data-datepicker="time"]').datetimepicker({
        format: "LT",
        icons: {
            up: "fa fa-chevron-up",
            down: "fa fa-chevron-down"
        }
    })
  


    function PopulateIds(pthis, pMealID) {
        var vMealIds;
        vMealIds = $('#MealItemIds').val();
        if ($("#" + pthis.id).is(':checked') == true) {
            vMealIds = vMealIds + pMealID + ",";
            $('#MealItemIds').val(vMealIds);
        }
        else {
            vMealIds = RemoveId(vMealIds, pMealID, ",");
            $('#MealItemIds').val(vMealIds);
        }
    }
    var RemoveId = function (list, value, separator) {
        separator = separator || ",";
        var values = list.split(separator);
        for (var i = 0; i < values.length; i++) {
            if (values[i] == value) {
                values.splice(i, 1);
                return values.join(separator);
            }
        }
        return list;
    }
    $(document).on('click', '#CheckAll', function () {
        if ($(this).val() == 'Check All') {
            $('.CheckboxChecked').prop('checked', true);
            $(this).val('Uncheck All');
            $('.CheckboxChecked').each(function () {
                PopulateIds(this, $(this).val());
            });
        } else {
            $('.CheckboxChecked').prop('checked', false);
            $(this).val('Check All');
            $('#HiddenUserIds').val("");
            $('#SendEmailToUser').addClass('disabled');
        }
    });

</script>
<script>
    new Glider(document.querySelector('.glider'), {
        slidesToShow: 5,
        slidesToScroll: 1,
        draggable: true,
        dots: '.dots',
        arrows: {
            prev: '.glider-prev',
            next: '.glider-next'
        }
    });



</script>
