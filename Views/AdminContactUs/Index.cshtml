
@{
	ViewBag.Title = "Tashty | Contact Us Management";
	Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="content animate-panel">
	<div class="row">
		<div class="col-lg-12">
			<div class="hpanel">
				<div class="panel-heading m-b-sm">
					<div class="panel-tools font-light text-muted">
						<div class="panel-heading m-b-sm">
							<div class="panel-tools font-light text-muted">
								<button type="button" id="btnChangeMultipleStatus" class="btn btn-success m-r-md"> &nbsp;Change Status&nbsp;</button>
							</div>
						</div>
					</div>
					<h4> Contact Us Managment</h4>
				</div>
				<div class="panel-body dataTables_wrapper ">
			
					<div class="row">
						<div class="col-sm-12">
							<input type="hidden" id="hdnEmail" />
							<input type="hidden" id="hdnProfileID" />
							<input type="hidden" id="hdnContactUsID" />

							<table id="cus-table" class="table table-striped table-bordered table-hover dataTable no-footer" style="width:100% !important" role="grid" aria-describedby="example2_info">
								<thead>
                                    <tr role="row">
                                        <th width="4%"><input name="select_all" type="checkbox"></th>
                                        <th width="15%">Sender Email </th>
                                        <th width="30%">Message</th>
                                        <th width="15%">Name</th>
                                        <th width="15%">Phone</th>
                                        <th width="10%">Status</th>
                                        <th width="8%">Type</th>
                                        <th width="4%">Action</th>
                                    </tr>
								</thead>
								<tbody></tbody>
							</table>
						</div>
					</div>
					<div class="row">
						<div class="col-sm-5">
							<div class="dataTables_info" id="cus-count" role="status" aria-live="polite"></div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

@{

	Html.RenderPartial("ChangeStatus");
}


<script>
	
	$(function () {
		

		$('#mnuContact a').trigger('click');
	
		var rows_selected = [];
		var objData = [];

		function updateDataTableSelectAllCtrl(table) {

			var $table = table.table().node();
			var $chkbox_all = $('tbody input[type="checkbox"]', $table);
			var $chkbox_checked = $('tbody input[type="checkbox"]:checked', $table);
			var chkbox_select_all = $('thead input[name="select_all"]', $table).get(0);

			// If none of the checkboxes are checked
			if ($chkbox_checked.length === 0) {
				chkbox_select_all.checked = false;
				if ('indeterminate' in chkbox_select_all) {
					chkbox_select_all.indeterminate = false;
				}

				// If all of the checkboxes are checked
			} else if ($chkbox_checked.length === $chkbox_all.length) {
				chkbox_select_all.checked = true;
				if ('indeterminate' in chkbox_select_all) {
					chkbox_select_all.indeterminate = false;
				}

				// If some of the checkboxes are checked
			} else {
				chkbox_select_all.checked = true;
				if ('indeterminate' in chkbox_select_all) {
					chkbox_select_all.indeterminate = true;
				}
			}
		}


		var cusTable = $('#cus-table').DataTable({
			"serverSide": true,
			"autoWidth": false,
			"processing": true,
			"lengthChange": true,
			"searching": true,
			"paging": true,
			"pageLength": 10,
			"responsive": true,
			'order': [[1, 'asc']],
			"language": {
				"processing": "<i class='fa fa-circle-o-notch fa-spin fa-3x fa- fw'></i><span class='sr-only' > Loading...</span>"
			},
			"ajax": {
				"url": "@Url.Action("GetAllContactUsQueries", "AdminContactUs")",
				"data": function (data) {

					data.searchText = $('input[name="txtCategorySearch"]').val();

				}
			},
			"columns": [
				{
					"data": "",
					"render": function (data, type, full, meta) {

						var render = "<input type='checkbox'>";


						return render;

					}
				},
				{
					"data": "email",
					"render": function (data, type, full, meta) {
						return type === 'display' ?
							data == null ? "No email mentioned" : data : data;

					}
				},
				{
					"data": "query",
					"orderable": false,
					"render": function (data, type, full, meta) {
						return type === 'display' ?
							data == null ? "..." : data.length > 300 ? data.substring(0, 299) + '...' : data : data;
					}
                },
                {
                    "data": "name",
                    "render": function (data, type, full, meta) {
                        return type === 'display' ?
                            data == null ? "No name given" : data : data;

                    }
                },
                {
                    "data": "phone",
                    "render": function (data, type, full, meta) {
                        return type === 'display' ?
                            data == null ? "No phone number given" : data : data;

                    }
                },
				{
					"data": "queryStatus",
					"orderable": false,
					"render": function (data, type, full, meta) {
						var render = full.queryStatusID == 4 ? '<button class="btn btn-success btn-xs btn-circle" type="button"><i class="fa fa-check no-padding font10"></i></button>  ' + data :
							full.queryStatusID == 3 ? '<button class="btn btn-danger2 btn-xs btn-circle" type="button"><i class="fa fa-times no-padding font10"></i></button>  ' + data :
								full.queryStatusID == 2 ? '<button class="btn btn-info btn-xs btn-circle" type="button"><i class="fa fa-clock-o no-padding font10"></i></button>  ' + data :
									full.queryStatusID == 1 ? '<button class="btn btn-warning btn-xs btn-circle" type="button"><i class="fa fa-envelope no-padding font10"></i></button> ' + data : data;

						return render;
					}
				},
				{
					"data": "queryType",
					"orderable": false,
					"render": function (data, type, full, meta) {
						return type === 'display' ?
							data == null ? "" : data : data;

					}
				},
				{
					"data": "",
					"orderable": false,
					"render": function (data, type, full, meta) {
						var render = "<a  data-id=" + meta.row +" href=\"#\"  data-type=\"edit\"><li class=\"fa fa-reply\" aria-hidden=\"true\" ></li></a >";
						return render;
					}
				},
			],
			"getData": function () {
				if (cusTable == null)
					cusTable.initializeDataTable();
				else
					cusTable.ajax.reload();
			},
			"rowCallback": function (row, data, dataIndex) {

			}
		});

		cusTable.on('draw', function () {

			$('a[data-type="edit"]').click(function () {
				var ele = $(this).attr("data-id");
				setRowInfo(ele);
			});
			
		
			updateDataTableSelectAllCtrl(cusTable);
			

		});


		$('#btnChangeMultipleStatus').on('click', function (e) {
			var list = [];
			//alert(JSON.stringify(rows_selected));
			//alert(JSON.stringify(rows_selected.length));
			if (rows_selected.length > 0) {
				$.each(rows_selected, function (index, rowId) {
					//alert("index" + index);
					//alert("rowId" + rowId);
					var info = {};
					var data = cusTable.row(rowId).data();
					info.id = data.contactUsID;
					info.email = data.email;
					info.profileID = data.profileID;
					info.query = data.query;
					//alert(JSON.stringify(data));
					//alert(JSON.stringify(info));
					list.push(info);
				});
				cus.SetMultipleData(list);
			}
			else { }

		});

		function setRowInfo(rowId) {
			
			var info = {};
			var data = cusTable.row(rowId).data();
			info.id = data.contactUsID;
			info.email = data.email;
			info.profileID = data.profileID;
			info.query = data.query;
			cus.SetData(info);
		}

		$('#cus-table tbody').on('click', 'input[type="checkbox"]', function (e) {
			if ($(this).is(':checkbox')){
				var $row = $(this).closest('tr');
				var rowId = $row.index();
				// Determine whether row ID is in the list of selected row IDs
				var index = $.inArray(rowId, rows_selected);
				// If checkbox is checked and row ID is not in list of selected row IDs
				if (this.checked && index === -1) {
					rows_selected.push(rowId);
					// Otherwise, if checkbox is not checked and row ID is in list of selected row IDs
				} else if (!this.checked && index !== -1) {
					rows_selected.splice(index, 1);
				}

				if (this.checked) {
					$row.addClass('selected');
				} else {
					$row.removeClass('selected');
				}

				// Update state of "Select all" control
				updateDataTableSelectAllCtrl(cusTable);

				// Prevent click event from propagating to parent
				e.stopPropagation();
			}
		});

		// Handle click on table cells with checkboxes
		$('#cus-table input[type="checkbox"]').on('click', 'tbody td, thead th:first-child', function (e) {
			$(this).parent().find('input[type="checkbox"]').trigger('click');
		});

		// Handle click on "Select all" control
		$('thead input[name="select_all"]', cusTable.table().container()).on('click', function (e) {
			if (this.checked) {
				$('#cus-table tbody input[type="checkbox"]:not(:checked)').trigger('click');
			} else {
				$('#cus-table tbody input[type="checkbox"]:checked').trigger('click');
			}
			// Prevent click event from propagating to parent
			e.stopPropagation();
		});

		

	});


</script>

